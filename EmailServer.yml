AWSTemplateFormatVersion: 2010-09-09
Description: Email Server
Parameters : 

    KeyName: 
      Description : "Name of an existing EC2 KeyPair to enable SSH access to the instances"
      Type: "AWS::EC2::KeyPair::KeyName"
      ConstraintDescription : "must be the name of an existing EC2 KeyPair."
    VolumeSize: 
      Description : "Volume size of the instances"
      Type : "Number"
      ConstraintDescription : "30gb"  
        
Mappings:
  RegionMap:
    
    us-west-2:
     "AMI": "ami-0d70546e43a941d70"

Resources:
  VPC:
      Type: AWS::EC2::VPC
      Properties:
        CidrBlock: 10.10.0.0/16
        EnableDnsSupport: true
        EnableDnsHostnames: true
        Tags:
          - Key: Name
            Value: Email server Project

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Email Server Project

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
         Fn::GetAtt:
         - MyEIP2
         - AllocationId
      SubnetId: !Ref PublicSubnet
      Tags:
      - Key: Name
        Value: Email Server Project

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 10.10.10.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Email server Project Public Subnet (AZ1)

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: 10.10.11.0/24
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: Email Server Project Private Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Email server Project Public Routes

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Email server Project Private Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: NATGateway
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet
      
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP from 0.0.0.0/0 and ssh
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0  
      VpcId: !Ref VPC 
      
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-0ddf424f81ddb0720
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: 
        - !Ref WebServerSecurityGroup
      KeyName:  !Ref KeyName
      BlockDeviceMappings:
      - DeviceName: "/dev/sda1"
        Ebs:
           VolumeSize: !Ref VolumeSize
      Tags:
       - Key: Name
         Value: Email Server Project EC2
  MyEIP1:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2Instance
  MyEIP2:
    Type: AWS::EC2::EIP
   
       
     
Outputs:
  PublicIp:
    Description: EC2 Instance Public Ip
    Value: !GetAtt EC2Instance.PublicIp